.overview {
  --_primary-text-font-size: 2.25rem; // heading and rating-average
  --_heading-padding: 1.5rem 3rem;
  --_rating-count-font-size: 1.2rem;
  --_rating-padding: 0 2.25rem;
  --_rating-m-left: 3rem;
  
  @include respond(small) {
    --_primary-text-font-size: 1.8rem;
    --_heading-padding: 1.25rem 2rem;
    --_rating-count-font-size: 1rem;
    --_rating-padding: 0 1.5rem;
    --_rating-m-left: 1rem;
  }

  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);

  &__heading {
    font-size: var(--_primary-text-font-size);
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;

    padding: var(--_heading-padding);
  }

  &__stars {
    /* Within flexbox, a great trick to create a space between items other then `flex: 1` (which
     * actually stretches the item), is to use `margin: auto`, this way the element keep its
     * original size but a spacing is created. */
    margin-right: auto;

    // to better vertically center and remove spacing between stars
    display: flex;
    align-items: center;
  }
  
  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.4rem;
    
    display: flex;
    align-items: center;
    gap: .5rem;
  }

  &__rating {
    color: #fff;
    background-color: var(--color-primary);
    align-self: stretch;
    padding: var(--_rating-padding);
    margin-left: var(--_rating-m-left);

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  &__rating-average {
    font-size: var(--_primary-text-font-size);
    font-weight: 300;
    // line-height: var(--_primary-text-font-size); // doesn't look that good on smaller screens
    line-height: 2.25rem;
  }
  
  &__rating-count {
    font-size: var(--_rating-count-font-size);
    font-weight: 300;
    text-transform: uppercase;
  }
}