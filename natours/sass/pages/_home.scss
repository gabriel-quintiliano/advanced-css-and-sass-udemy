/* in scss files within the pages folder (like this file), we can put style that could
 * be in the components folder but actually are going to appear only in this specific page */

.section-about {
  $_margin-neg-indentation: 20vh; // will be replaced in final css
  --_padding-top: 8rem;
  --_padding-bottom: 20vh;

  @include respond(tab-port) {
    --_padding-top: 3rem;
    --_padding-bottom: 9vh;
  }

  background-color: $color-grey-light-1;
  /* 8rem is the padding we want and +$margin-negative-indentation is to "cancel out" the
   * negative margin-top property set just bellow. In the end we're just doing that so the
   * background color of this element "flows" behind the element above this one.
   * (I looks like a hack to me, maybe there is a better way to do that...) */
  // padding: calc(8rem + #{$margin-negative-indentation}) 0 $margin-negative-indentation; // top sides bottom
  padding: calc(var(--_padding-top) + $_margin-neg-indentation) 0 var(--_padding-bottom); // top sides bottom
  /* when you use negative values for margin instead of "expanding" outwards and pushing elements
   * around, it "expands" inwards and this way its box model gets smaller, thus the element gets
   * closer to other elements */
  margin-top: - $_margin-neg-indentation;
}

.section-features {
  --_padding-block: 15rem;

  @include respond(tab-port) {
    --_padding-block: 10rem;
  }

  padding: var(--_padding-block) 0;
  background-image:
    linear-gradient(
      to right bottom,
      rgba($color-primary-light, .8),
      rgba($color-primary-dark, .8)),
    url("../img/nat-4.jpg");
  background-size: cover;
  // clip-path: polygon(0 25%, 100% 0, 100% 75%, 0 100%);
  margin-top: -12rem;
  transform: skewY(-7deg);

  // the `&` is not really necessary bellow but it looks better when being used like that
  & > * {
    transform: skewY(7deg);
  }
}

.section-tours {
  $margin-negative-indentation: 12rem;
  --_padding-block: 8rem;

  padding: calc($margin-negative-indentation + 8rem) 0 8rem; // top side bottom
  background-color: $color-grey-light-1;
  margin-top: -$margin-negative-indentation;
}

.section-stories {
  --_padding-block: 15rem;

  @include respond(tab-port) {
    --_padding-block: 6rem;
  }

  position: relative;
  padding: var(--_padding-block) 0;
}

.section-book {
  --_padding-block: 15rem;

  @include respond(tab-port) {
    --_padding-block: 8rem;
  }

  padding: var(--_padding-block) 0;
  background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
}

.book {
  --_form-width: 50%;
  --_form-padding: 6rem;
  
  @include respond(tab-land) {
    --_form-width: 65%;
  }

  @include respond(tab-port) {
    --_form-width: 100%;
    --_form-padding: 2rem;
  }

  /* regarding `linear-gradient()` its direction can be set in degrees also, and you can define a percentages
   * referring after the color which will represent where it begins or ends, e.g. below the a gradient that
   * starts at 0% in white and goes up to 50%, and from there up to the end it its transparent so the actual
   * background image can show. */
  background-image: linear-gradient(105deg, rgba($color-white, .75) 0%, rgba($color-white, .75) var(--_form-width), transparent var(--_form-width)), url("../img/nat-10.jpg");
  background-size: cover;
  background-position: right;
  border-radius: 4px;
  box-shadow: 0 15px 40px rgba($color-black, .2);

  &__form {
    width: var(--_form-width); 
    padding: var(--_form-padding);
    padding-bottom: 4rem;
  }
}