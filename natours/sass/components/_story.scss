.story {
  $transition-duration: 375ms;

  --_story-width: 90%;
  --_story-padding: 6rem;
  --_skewX-value: 12deg;

  @include respond(tab-port) {
    --_story-width: 100%;
    --_story-padding: 2rem;
  }

  @include respond(phone) {
    --_skewX-value: 0deg;
  }

  width: var(--_story-width);
  margin: 0 auto;
  box-shadow: 0 30px 60px rgba($color-black, .1);
  background-color: rgba($color-white, .6);
  border-radius: 3px;
  padding: var(--_story-padding);
  transform: skewX(calc(var(--_skewX-value) * -1));
  
  & > * {
    // so child elements look normal
    transform: skewX(var(--_skewX-value));
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    position: relative;
    overflow: hidden;
    margin-right: calc(5rem / 2); // applied to <figure>
    border-radius: 50%;

    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      border-radius: none;
      // apparently, the basis for the percentage within `circle()` is the current element width, not the parents width.
      shape-outside: circle(50%);
      clip-path: circle(50%);
    }
  }

  &__img {
    height: 100%;
    transform: translateX(-40px) scale(1.2);
    transition: all $transition-duration;
  }

  &__caption {
    font-size: 1.7rem;
    color: $color-white;
    text-transform: uppercase;
    text-align: center;
    
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 80%);

    opacity: 0;
    transition: all $transition-duration;
  }

  &:hover &__caption {
      transform: translate(-50%, -50%);
      opacity: 1;
  }

  &:hover &__img {
    transform: translateX(-40px) scale(1);

    // the filter property can apply many filters to an image or other replaced element
    filter: blur(3px) brightness(80%);
  }
}