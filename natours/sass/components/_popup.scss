.popup {
  position: fixed;
  top: 0;
  left: 0;
  /* Regarding width, it seems better to use 100% instead of 100vw (when it's possible) because,
   * the `vw` unit takes into account the scroll bar width too, i.e. the whole window width.
   * Meanwhile, 100% in most cases will represent 100% of the available space, i.e. disregards
   * the scrollbar width. */
  width: 100%;
  height: 100%;
  padding: 4rem;
  background-color: rgba($color-black, .8);
  z-index: 1004; // so it is above .navigation__button

  // This popup will initially be hidden from view
  opacity: 0;
  visibility: hidden;

  perspective: 7rem;
  transition: opacity .3s;

  /* The :target pseudo-class represents the state when this class (.popup in this case) is present
   * in the url as a fragment, e.g. 'yoursite.com/#popup', that is when the styles defined here will
   * be applied to the class itself. */
  &:target {
    opacity: 1;
    visibility: visible;
  }

  &__content {
    @include absCenter;

    height: 50rem;
    width: 75%;
    max-width: 114rem;
    max-height: 85%;
    background-color: $color-white;
    box-shadow:  0 20px 40px rgba($color-black, .2);
    border-radius: 3px;
    overflow: clip;

    transform: translateZ(-100px);
    transition: transform .4s 150ms;
  }

  &:target &__content {
    transform: translateZ(0px);
  }
  
  &__left {
    display: inline-block;
    width: 33.3333333%;
    height: 100%;
  }
  
  &__right {
    display: inline-block;
    width: 66.6666667%;
    max-height: 100%;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 0;
    overflow: auto;

    padding: 3rem 5rem;
  }

  &__img {
    /* `vertical-align: middle` removes void space bellow the image, as <img> is an inline element,
     * that is referent to the line-height set up. */
    vertical-align: middle;
    height: 50%;
    width: 100%;
    object-fit: cover;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    text-align: justify;

    column-count: 2; // in how many columns the whole text will be split into
    column-gap: 3rem; // gap width between columns
    column-rule: 2px solid $color-grey-light-2; // a vertical line between columns
  }

  &__close {
    position: absolute;
    top: 2rem;
    right: 2rem;
    z-index: 1005; // above everything else
  }
}