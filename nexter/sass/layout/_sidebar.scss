.sidebar {
  --_btn-w: 4.5rem; // &__btn width
  // goes back 100% but discounts the "closed sidebar width" so it's always on screen
  // +1px is to be safe that there will be no space between content and the side bar in Chrome
  --_sidebar-transform: translateX(calc(-100% + var(--closed-sidebar-w) + 1px));
  --_opened-sidebar-w: min(100%, 30rem);
  --_opened-sidebar-h: 120vh;
  --_btn-grid-row: 1;
  --_btn-grid-col: 2;
  --_nav-grid-col: 1 / span 2;
  --_nav-m-top: 10vh;
  --_nav-item-display: none;
  --_grid-2nd-col: var(--closed-sidebar-w);
  --_grid-2nd-row: 1fr;
  
  @include respond(largest) {
    --_btn-w: 4rem; // &__btn width
    // +1px is to be safe that there will be no space between content and the side bar in Chrome
    --_sidebar-transform: translateY(calc(-100% + var(--closed-sidebar-h) + 1px));
    --_opened-sidebar-w: 100%;
    --_opened-sidebar-h: max-content;
    --_btn-grid-row: 2;
    --_btn-grid-col: 2;
    --_nav-grid-col: 1 / span 2;
    --_nav-m-top: 6vh;
    --_nav-item-display: grid;
    --_grid-2nd-col: 6.25rem;
    --_grid-2nd-row: var(--closed-sidebar-h);
  }

  display: grid;
  grid-template-columns: 1fr var(--_grid-2nd-col);
  grid-template-rows: max-content var(--_grid-2nd-row);

  background-color: $color-primary;

  // yes, this doesn't seem 100% the way it's supposed to be (dunno for sure)
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999; // should always be on top on everything

  width: var(--_opened-sidebar-w); // same width as 1st grid-column (in .container)

  // After so much trying, I found that 120vh for this fixed sidebar is kind of the minimum
  // it has to have to really occupy 100% of the viewport height at all times in mobile,
  // specially when there are no ui elements present, and, at the same, it works the same
  // in desktop and cause no kind extra scrolling.
  height: var(--_opened-sidebar-h);

  // to hide the contents from the sidebar, initially it's closed
  transform: var(--_sidebar-transform);
  transition: transform 200ms ease-out;
  
  &--opened {
    transform: translateX(0);
  }

  &__toggle-btn {
    grid-row: var(--_btn-grid-row);
    grid-column: var(--_btn-grid-col);

    place-self: center;
    display: block;
    text-align: center;
    border: none;
    border-radius: 3px;
    width: var(--_btn-w);
    aspect-ratio: 1;

    background-color: transparent;
  }

  &__icon {
    display: block;
    width: calc(var(--_btn-w) - 1rem);
    height: 6.666666%;
    margin: 0 auto; // horizontally center it within &__toggle-btn

    background-color: #fff;
    border-radius: 50px;
    
    position: relative; // to serve as anchor to the pseudo-elements bellow

    &::before,
    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      background-color: #fff;
      border-radius: 50px;
      
      position: absolute;
      transition: transform 300ms;
    }

    &::before {
      transform: translateY(-370%);
    }
    
    &::after {
      transform: translateY(370%);
    }
  }
  
  &--opened &__icon {
    background-color: transparent;

    &::before,
    &::after {
      width: 90%;
      height: 60%;
    }

    &::before {
      transform: rotateZ(-45deg);
    }
  
    &::after {
      transform: rotateZ(45deg);
    }
  }

  // this selector was simply used for positioning purposes
  nav {
    grid-column: var(--_nav-grid-col);
  }

  &__nav {
    margin-top: var(--_nav-m-top);
    list-style: none;
  }

  &__nav-item {
    display: var(--_nav-item-display);
    justify-items: center;
    transition: background-color 200ms;

    &:hover {
      background-color: darken($color-primary, 15%);
    }
  }

  &--opened &__nav-item {
    display: grid;
  }

  &__nav-link {
    font-size: 1.5rem;
    color: #fff;
    text-decoration: none;
    font-family: $font-display;
    text-transform: uppercase;

    display: block;
    padding: 1.5rem;
  }
}