.container {
  display: grid;
  justify-content: center;

  // In grid-template-rows or grid-template-columns, the `auto` keyword means
  // something like adapt according to content.
  // TIP: min() and max() apparently don't recognize keyword values related sizes defined
  // by the grid algorithm, so if you need to interact with those, use minmax() which
  // behaves the same as max() and always uses/returns the biggest computed value.
  grid-template-rows: minmax(80vh, max-content) auto min-content repeat(3, auto); // 6 explicit grid-rows in total
  // for the last 3 rows, we could actually no set anything, because auto is the default (I think)

  // apparently, the min() and max() functions don't work with fr units, only percentage
  // and hard coded numbers, use minmax() instead.
  grid-template-columns: [sidebar-start] var(--closed-sidebar-w) [sidebar-end full-start] minmax(6rem, 1fr)
                         [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
                         [center-end] minmax(6rem, 1fr) [full-end]; // 11 columns in total

  /* It's always a good idea to name you grid columns and row because if you intend to add or 
   * remove columns/rows, you can do so without having to go back to each element within that
   * grid to place it again, as instead of a number you use the name of that column/row and
   * that stays the same. */

  position: relative;
  padding-top: var(--closed-sidebar-h);
}